#include <iostream>
#include <ctime>
using namespace std;
int main() {
	//Array1. Дано целое число N (> 0). Сформировать и вывести целочисленныймассив размера N, содержащий N первых положительных нечетных чисел :1, 3, 5, . . . .
	/*const int n = 10;
	int mas[n];
	mas[0] = 1;
	for (int i = 0; i < n; i++) {
		mas[i] = mas[i - 1] + 2;
		cout << mas[i] << ' ';
		//mas[i] = 2*i+1;
		cout << mas[i] << endl;
	}*/
	//Array2. Дано целое число N (> 0). Сформировать и вывести целочисленный	массив размера N, содержащий степени двойки от первой до N - й: 2, 4,8, 16, . . . .
/*const int s = 10;
int mas[s];
for (int i = 1; i < s; i++) {
	mas[i] = pow(2,i)
	cout << mas[i] << ' ';
	//mas[i] = 2*i+1;
	cout << mas[i] << endl;
}*/
//Array3. Дано целое число N (> 1), а также первый член A и разность D арифметической прогрессии. Сформировать и вывести массив размера N, содержащий N первых членов данной прогрессии:A, A + D, A + 2·D, A + 3·D, . . . .
/*int a, d;
cin >> a >> d;
const int n = 10;
int mas[n];
mas[0] = a;
cout << mas[0] << ' ';
for (int i = 1; i < n i++;) {
	mas[i] = mas[i - 1] + d;
	cout << mas[i] << ' ';
}
cout << endl;*/
//Array4. Дано целое число N (> 1), а также первый член A и знаменатель D
//геометрической прогрессии.Сформировать и вывести массив размера N,
//содержащий N первых членов данной прогрессии A, A·D, A·D2, A·D3, . . . .
/*const int s = 12;
int mas[s];
int A, D;
cin >> A >> D;
for (int i = 0; i < S i++) {
	mas[i] = a * pow(D, i);
}
for (int i = 0; i < N; i++) {
	cout << mas[i] << endl;
}*/
//Array5. Дано целое число N (> 2). Сформировать и вывести целочисленныймассив размера N, содержащий N первых элементов последовательностичисел Фибоначчи FK :сщF1 = 1, F2 = 1, FK = FK−2 + FK−1, K = 3, 4, . . . .
/*const int n = 10;
int f = 1; fk = 1;
int mas[n];
m[2] = 3*/






//Array6. Даны целые числа N (> 2), A и B. Сформировать и вывести целочисленный массив размера N, первый элемент которого равен A, второйравен B, а каждый последующий элемент равен сумме всех предыдущих.
	/*const int n = 10;
	int mas[n];
	int a, b;
	cin >> a >> b;
	for (int i = 2; i < n; i++) {
		mas[0] = a;
		mas[1] = b;
		mas[i] = 0;
		for (int j = 1; j <= i j++) {
			mas[i] += mas[i - j];
		}
	}
	for (int i = 0; i < n; i++)
	{
		cout << mas[i] << " ";
	}*/
	//Array7◦. Дан массив размера N.Вывести его элементы в обратном порядке.
	const int n = 12;
	int mas[n];
	srand(time(nullptr));
	for (int i = 0; i < 12; i++) {
		mas[i] = rand();
		cout << mas[i] << " ";
	}
	cout << endl;
	for (int i = 11; i >= 0; i--) {
		cout << mas[i] << " ";
	}
	//Array8.Дан целочисленный массив размера N.Вывести все содержащиеся в
	//	данном массиве нечетные числа в порядке возрастания их индексов, а
	//	также их количество K
	const int n = 10;
	int mas[n];
	int k = 0;
	for (int i = 0; i < n; i++) {
		cin >> mas[i];
	}
	for (int i = 0; i < n; i++) {
		if (mas[i] % 2 != 0) {
			cout << mas[i] << endl;
			k++;
	}
		//Array9. Дан целочисленный массив размера N. Вывести все содержащиеся в данном массиве четные числа в порядке убывания их индексов, а также	их количество K.
		const int  n = 10;
		int main[n];
		int k = 0;
		for ()
	}

